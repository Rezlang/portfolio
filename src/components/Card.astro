---
interface Skill {
  name: string;
  icon: string; // URL to the skill's logo image
}

interface Props {
  title: string;
  body: string;
  href: string;
  imgPath: string;
  skills: Skill[];
}

const { href, title, body, skills, imgPath } = Astro.props;
---

<li class="link-card">
	<a href={href}>
	  <h2>
		{title}
		<span>&rarr;</span>
	  </h2>
	  <img src={imgPath} alt="Image Description" class="card-image" />
	  <p>{body}</p>
	  <div class="skills-container">
		{skills.map(skill => (
		  <div class="skill">
			<div class="skill-icon-container">
			  <img class="skill-icon" src={skill.icon} alt={skill.name} title={skill.name} width="24" height="24" />
			</div>
			<div class="skill-name-container">{skill.name}</div>
		  </div>
		))}
	  </div>
	</a>
  </li>
  
<style>
	@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&display=swap');
	
	.card-image {
		display: block; /* Ensures the image is a block-level element */
		max-width: 90%; /* Limits the image width to 80% of its parent */
		height: auto; /* Maintains aspect ratio */
		margin: 0 auto;
	}

	.skill-icon {
		border-radius: 4px;
		padding: 4px;
		transition: background-color 0.3s ease, color 0.3s ease;
	}

	.skills-container {
		display: flex;
		flex-wrap: wrap;
		gap: 8px;
	}
  
	.skill {
		display: flex;
		flex-direction: column;
		align-items: center;
		height: 2%; /* Adjust the height based on the total height you want for the icon + label */
	}

	.skill-icon-container {
		display: flex;
		justify-content: center;
		align-items: center;
		/* Ensure this container's size is appropriate for the icon */
	}

	.skill-name-container {
		opacity: 0; /* Initially hide the skill name but reserve its space */
		text-align: center;
		font-size: .6rem;
		transition: opacity 0.3s ease;
		font-family: inhert;
	}

	.skill-icon-container:hover + .skill-name-container {
		opacity: 1; /* Show the skill name when icon is hovered */
	}

/* You may need to adjust other styles to ensure they work well with the fixed height of the .skill element, 
especially if you notice any alignment issues or if the space reserved for the label is not sufficient. */

  
	.skill-icon:hover {
	  background-color: rgba(255, 255, 255, 0.1);
	  color: white;
	}
  
	.link-card {
	  list-style: none;
	  display: flex;
	  padding: 1%;
	  background-color: rgba(35, 38, 45, 1);
	  border-radius: 7px;
	  background-position: 100%;
	  transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1), background-color 0.3s ease;
	  box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
	  opacity: .7;
	}
  
	.link-card > a {
	  display: flex;
	  flex-direction: column;
	  justify-content: space-around;
	  width: 100%;
	  text-decoration: none;
	  line-height: 1.4;
	  padding: 1%;
	  border-radius: 7px;
	  color: white;
	  background-color: rgb(var(card-background-grey));
	  transition: background-color 0.3s ease; /* Added transition for background-color */
	}
  
	.link-card:is(:hover, :focus-within) {
	  background-image: var(--accent-gradient-dark);
	}
  
	.link-card:is(:hover, :focus-within) > a {
	  background-color: rgba(35, 38, 45, 0.6); /* Applied transparency to the card content on hover */
	}

	.link-card:hover h2 {
		color: rgb(136, 58, 234);

	}
  
	h2 {
	  color: rgb(var(--accent));
	  margin: 1%;
	  font-size: 1.25rem;
	  font-family: "Roboto Mono", monospace;
  	  font-weight: heavy;
	  transition: color 0.3s ease;
	}
  
	p {
		align-self: center;
	  margin: 2%;
	  font-family: "Roboto Mono", monospace;
  	font-weight: normal;
	font-size: 1rem;
	}
  </style>
